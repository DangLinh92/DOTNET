@using Microsoft.AspNetCore.Authorization
@using HRMS.Authorization
@inject IAuthorizationService AuthorizationService
@model List<DangKyOTNhanVienViewModel>
@{
    ViewData["Title"] = "Overtime";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section Scripts
{
    <script>
        var deparment = JSON.parse('@Html.Raw(JsonSerializer.Serialize(User.FindFirst(x=>x.Type == "Deparment").Value+""))');
        var roleUsers = JSON.parse('@Html.Raw(JsonSerializer.Serialize(User.FindFirst(x => x.Type == "Roles").Value + ""))');
    </script>
    <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/app/controllers/Overtime/overtimeMns.js"></script>
    <script>
        var controller = new overtimeController();
        controller.initialize();

        onSuccess = controller.doAftersearch;

        $(document).ready(function () {
            var table = $('#overtimeDataTable').DataTable({
                scrollY: 600,
                scrollX: true,
                scrollCollapse: true,
                paging: false,
                select: true,
                "searching": true,
                initComplete: function () {
                    this.api().columns([1, 2, 3, 4, 5, 6, 7, 8,9]).every(function () {
                        var column = this;
                        var select = $('<select><option value="">All</option></select>')
                            .appendTo($(column.header()))
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );
                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            if (d == '<span class="badge bg-inverse-success">Yes</span>') {
                                select.append('<option value="Yes">Yes</option>');
                            }
                            else if (d == '<span class="badge bg-inverse-warning">Request</span>') {
                                select.append('<option value="Request">Request</option>');
                            }
                            else if (d == '<span class="badge bg-inverse-danger">No</span>') {
                                select.append('<option value="No">No</option>')
                            }
                            else {
                                select.append('<option value="' + d + '">' + d + '</option>');
                            }
                        });
                    });
                }
                , columnDefs: [{
                    targets: 0,
                    className: 'dt-body-center',
                    render: function (data, type, full, meta) {
                        return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                    }
                }],
                "order": [9, 'asc']
            });
            $('input[type=search]').addClass('floating').removeClass('form-control-sm').css('width', 300).attr('placeholder', 'Type to search');
            $('select[name="overtimeDataTable_length"]').removeClass('form-control-sm');

            table.columns.adjust().draw();
            table.order([10, 'asc']).draw();

            // Handle click on "Select all" control
            $('#overtimeDataTable-select-all').on('click', function () {
                // Get all rows with search applied
                var rows = table.rows({ 'search': 'applied' }).nodes();
                // Check/uncheck checkboxes for all rows in the table
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
            });

            // Handle click on checkbox to set state of "Select all" control
            $('#overtimeDataTable tbody').on('change', 'input[type="checkbox"]', function () {
                // If checkbox is not checked
                if (!this.checked) {
                    var el = $('#overtimeDataTable-select-all').get(0);
                    // If "Select all" control is checked and has 'indeterminate' property
                    if (el && el.checked && ('indeterminate' in el)) {
                        // Set visual state of "Select all" control
                        // as 'indeterminate'
                        el.indeterminate = true;
                    }
                }
            });

            // init select 2 jquery
            $(".nested").select2({
                tags: true
            });
        });

        let resizeObserver = new ResizeObserver(() => {
            $($.fn.dataTable.tables(true)).DataTable()
                .columns.adjust();
        });

        resizeObserver.observe($('#content_id_overtime')[0]);
    </script>
}
@section Styles{
    <style>

        #btnCreate {
            float: none;
            margin-right: 10px;
        }

        #btnManagement {
            min-width: 150px;
            border-radius: 50px;
        }
    </style>
}
<!-- Page Content -->
<div class="content container-fluid" id="content_id_overtime">
    <!-- Page Header -->
    <div class="page-header">
        <div class="row align-items-center">
            <div class="col">
                <h3 class="page-title">Bổ sung thêm giờ OT</h3>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/admin/home/index">Home</a></li>
                    <li class="breadcrumb-item active">Overtime</li>
                </ul>
            </div>
            <div class="col-auto float-right ml-auto">
                @if (User.FindFirst(x => x.Type == "Roles").Value.Split(';').Length > 0 &&
            (User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "Admin" || User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "HR" || User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "AssLeader"))
                {
                <a href="#" id="btnCreate" class="btn add-btn" data-toggle="modal" data-target="#addEditOvertimeModel"><i class="fa fa-plus"></i> Đăng ký OT</a>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" id="btnManagement" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Management</button>
                    <div class="dropdown-menu" style="">
                        <a class="dropdown-item" href="~/templates/OvertimeTemplate.xlsx">Lấy File mẫu đăng ký</a>
                        <a class="dropdown-item" href="#" id="btn-importOvertime">Đăng ký OT(Import)</a>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
    <!-- /Page Header -->
    <!-- Search Filter -->
    <form id="frmSearch" method="post" data-ajax="true" data-ajax-url="/Admin/DangKyOT/Search" data-ajax-loading="#spinner1" data-ajax-update="#gridOvertimeIndex" data-ajax-mode='replace' data-ajax-success="onSuccess">
        <div class="row filter-row">

            @if (User.FindFirst(x => x.Type == "Roles").Value.Split(';').Length > 0 &&
                !(User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "GrLeader" ||
                User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "KRManager" ||
                User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "HR" ||
                User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "Admin"))
            {
            <div class="col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12"></div>
            }

            <div class="col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12">
                <div class="form-group form-focus select-focus">
                    <select class="select floating" id="cboDepartment" name="department">
                        <option value=""> -- Select -- </option>
                        <option value="New">New</option>
                        <option value="Active">Active</option>
                        <option value="InActive">InActive</option>
                    </select>
                    <label class="focus-label">Deparment</label>
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12">
                <div class="form-group form-focus select-focus">
                    <select class="select floating" id="searchStatus" name="status">
                        <option value=""> -- Select -- </option>
                        <option value="R">Request</option>
                        <option value="N">Not approved yet</option>
                        <option value="Y">Approved</option>
                    </select>
                    <label class="focus-label">Status</label>
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12">
                <div class="form-group form-focus">
                    <div class="cal-icon">
                        <input class="form-control floating datetimepicker" type="text" id="searchFromTime" name="timeFrom">
                    </div>
                    <label class="focus-label">From</label>
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12">
                <div class="form-group form-focus">
                    <div class="cal-icon">
                        <input class="form-control floating datetimepicker" type="text" id="searchToTime" name="timeTo">
                    </div>
                    <label class="focus-label">To</label>
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12">
                <button href="#" class="btn btn-success btn-block" id="btnSearch" type="submit"> Search </button>
            </div>

            @if (User.FindFirst(x => x.Type == "Roles").Value.Split(';').Length > 0 &&
             (User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "GrLeader" ||
             User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "KRManager" ||
             User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "HR" ||
             User.FindFirst(x => x.Type == "Roles").Value.Split(';')[0] == "Admin"))
        {
            <div class="col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12">
                <a href="#" style="min-width: 120px;" class="btn btn-primary" id="btnApprove" data-target="#approve_overtime">  Approve</a>
                <a href="#" class="btn btn-primary" id="btnUnApprove" data-target="#unapprove_overtime">UnApprove</a>
            </div>
        }
        </div>
    </form>

    <div class="card-body" id="spinner1" style="text-align:center; display:none">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <!-- /Search Filter -->

    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive" id="gridOvertimeIndex">
                @await Html.PartialAsync("_gridOvertimePartialView", Model)
            </div>
        </div>
    </div>
</div>
<!-- /Page Content -->
<!-- Delete overtime -->
<div class="modal custom-modal fade" id="delete_overtime" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-header">
                    <input type="hidden" id="txtHiddenId" />
                    <h3>Delete Overtime</h3>
                    <p>Are you sure want to delete?</p>
                </div>
                <div class="modal-btn delete-action">
                    <div class="row">
                        <div class="col-6">
                            <a href="javascript:void(0);" id="btnDeleteOvertime" class="btn btn-primary continue-btn">Delete</a>
                        </div>
                        <div class="col-6">
                            <a href="javascript:void(0);" data-dismiss="modal" class="btn btn-primary cancel-btn">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Delete Expense Modal -->

<div class="modal custom-modal fade" id="approve_overtime" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-header">
                    <input type="hidden" id="hiIdApprove" />
                    <h3>Approve</h3>
                    <p>Are you sure want to approve?</p>
                </div>
                <div class="modal-btn delete-action">
                    <div class="row">
                        <div class="col-6">
                            <a href="javascript:void(0);" class="btn btn-primary continue-btn" id="btn-approve_overtime">Approve</a>
                        </div>
                        <div class="col-6">
                            <a href="javascript:void(0);" data-dismiss="modal" class="btn btn-primary cancel-btn">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal custom-modal fade" id="unapprove_overtime" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-header">
                    <input type="hidden" id="hiIdUnApprove" />
                    <h3>UnApprove</h3>
                    <p>Are you sure want to unapprove?</p>
                </div>
                <div class="modal-btn delete-action">
                    <div class="row">
                        <div class="col-6">
                            <a href="javascript:void(0);" class="btn btn-primary continue-btn" id="btn-Unapprove_overtime">UnApprove</a>
                        </div>
                        <div class="col-6">
                            <a href="javascript:void(0);" data-dismiss="modal" class="btn btn-primary cancel-btn">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<partial name="_dangkyOTModelView" />

<!-- import excel model -->
<partial name="_ImportExcelModel" />