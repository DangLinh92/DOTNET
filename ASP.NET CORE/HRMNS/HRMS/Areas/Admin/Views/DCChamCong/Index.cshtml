
@{
    ViewData["Title"] = "Điều Chỉnh Công";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section Styles {

}

@section Scripts
{
    <script src="~/js/exportFile_devextreme/polyfill.min.js"></script>
    <script src="~/js/exportFile_devextreme/exceljs.min.js"></script>
    <script src="~/js/exportFile_devextreme/FileSaver.min.js"></script>

    <script>

        /* Import, export, insert,update,delete danh sách nhân viên khám sk */
        function ImportExcel() {
            $("#fileInputExcel").val(null);
            $('#import_File').modal('show');
        }

        $('#btnCloseImportExcel').on('click', function () {
            var fileUpload = $("#fileInputExcel").get(0);
            var files = fileUpload.files;
            if (files.length > 0) {
                $("#fileInputExcel").val(null);
                $('#hd-ImportData').val('');
                $('#import_File').modal('hide');
                location.reload();
            }
        });

        $('#btnCloseImport').on('click', function () {
            var fileUpload = $("#fileInputExcel").get(0);
            var files = fileUpload.files;
            if (files.length > 0) {
                $("#fileInputExcel").val(null);
                $('#hd-ImportData').val('');
                $('#import_File').modal('hide');
                location.reload();
            }
        });

        $('#btnImportExcel').on('click', function () {
            var fileUpload = $("#fileInputExcel").get(0);
            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
                fileData.append("files", files[i]);
            }

            $.ajax({
                url: '/Admin/DCChamCong/ImportExcel',
                type: 'POST',
                data: fileData,
                processData: false,  // tell jQuery not to process the data
                contentType: false,  // tell jQuery not to set contentType
                success: function (data) {
                    $('#import_File').modal('hide');
                    hrms.notify("Import success!", 'Success', 'alert', function () {
                        location.reload();
                    });
                },
                error: function (status) {
                    hrms.notify('error: Import error!', 'error', 'alert', function () { });
                }
            });
            return false;
        });


        function exporting(e) {
            var workbook = new ExcelJS.Workbook();
            var worksheet = workbook.addWorksheet('DieuChinhLuong');

            DevExpress.excelExporter.exportDataGrid({
                component: e.component,
                worksheet: worksheet,
                autoFilterEnabled: true
            }).then(function () {
                workbook.xlsx.writeBuffer().then(function (buffer) {
                    saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'DieuChinhLuong.xlsx');
                });
            });
            e.cancel = true;
        }

        function calculateFilterExpression(filterValue, selectedFilterOperation, target) {
            if (target === "search" && typeof (filterValue) === "string") {
                return [this.dataField, "contains", filterValue]
            }

            return function (data) {
                return (data.AssignedEmployee || []).indexOf(filterValue) !== -1
            }
        }

        // chon thang
        function selectedDate_changed(data) {
            console.log(data.value);
            const dataGridDataSource = $("#gridContainer").dxDataGrid("getDataSource");
            dataGridDataSource.reload();
        };

        function getMonth() {

            var dateBox = $("#txt_month").dxDateBox("instance");

            let sDate = dateBox.option('value');

            return sDate;
        }
    </script>
}

<div class="content container-fluid">
    <!-- Page Header -->
    <div class="page-header">
        <div class="row align-items-center">
            <div class="col">
                <h3 class="page-title">Điều Chỉnh Chấm Công</h3>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/OpeationMns/Home/Index">Home</a></li>
                    <li class="breadcrumb-item active">Điều Chỉnh Chấm Công</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="row align-items-center">
        <div class="col">
            <div class="form">
                <div class="dx-fieldset">
                    <div class="dx-field">
                        <div>
                            @(Html.DevExtreme().DateBox()
                                  .ID("txt_month")
                                  .Value(DateTime.Now.ToString("yyyy-MM-dd"))
                                  .CalendarOptions(x=>x.MaxZoomLevel(CalendarZoomLevel.Year))
                                  .DisplayFormat("yyyy-MM")
                                  .Width(200)
                                  .Placeholder("Select...")
                                  .Label("Year")
                                  .OnValueChanged("selectedDate_changed")
                            )

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-auto float-right ml-auto" style="margin-right:100px;">
            <div class="btn-group">
                <button type="button" class="btn btn-info dropdown-toggle" id="btnImport" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Excel</button>
                <div class="dropdown-menu" style="">
                    <a class="dropdown-item" href="~/templates/DieuChinhLuong.xlsx">File mẫu import điều chỉnh công</a>
                    <a class="dropdown-item" id="btnImport" onclick="ImportExcel()">Import Điều Chỉnh Công</a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @(Html.DevExtreme().DataGrid<DCChamCongViewModel>
    ()
    .ID("gridContainer")
    .Height(720)
    .ShowBorders(true)
    .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Virtual))
    .Paging(paging => paging.Enabled(false))
    .AllowColumnResizing(true)
    .ColumnMinWidth(50)
    .ColumnAutoWidth(true)
    .ShowColumnLines(true)
    .ShowRowLines(true)
    .RowAlternationEnabled(true)
    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
    .OnExporting("exporting")
    .FilterRow(filterRow => filterRow
    .Visible(true)
    .ApplyFilter(GridApplyFilterMode.Auto)
    )
    .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .Selection(s => s.Mode(SelectionMode.Single))
    .HoverStateEnabled(true)
    .Editing(editing => {
        editing.Mode(GridEditMode.Popup);
        editing.AllowUpdating(true);
        editing.AllowAdding(true);
        editing.AllowDeleting(true);
    })
    .Columns(columns => {
        columns.AddFor(m => m.HR_NHANVIEN.TenNV).Caption("Họ Tên").AllowEditing(false);

        columns.AddFor(m => m.MaNV)
                .Caption("Mã NV").AllowEditing(true)
                .Lookup(lookup => lookup
                .DataSource(d => d.Mvc().Controller("DCChamCong").LoadAction("Employees").Key("Id"))
                .ValueExpr("Id")
                .DisplayExpr("TenNV")
            )
        .CalculateFilterExpression("calculateFilterExpression")
        .Width(200);

        columns.AddFor(m => m.HR_NHANVIEN.HR_BO_PHAN_DETAIL.MaBoPhan_TOP2).Caption("Bộ Phận").AllowEditing(false);
        columns.AddFor(m => m.NgayDieuChinh).Caption("Ngày Điều Chỉnh").AllowEditing(true);
        columns.AddFor(m => m.NoiDungDC).Caption("Nội Dung").AllowEditing(true);
    })
    .DataSource(d => d.Mvc()
    .Area("Admin")
    .Controller("DCChamCong")
    .LoadAction("Get")
    .LoadParams(new {month = new JS("getMonth") })
    .UpdateAction("Put")
    .InsertAction("Post")
    .DeleteAction("Delete")
    .Key("Id")
    )
    )

            @using (Html.DevExtreme().NamedTemplate("EmbeddedDataGridSingle"))
            {
                @(Html.DevExtreme().DataGrid()
        .ID("embedded-datagrid")
        .DataSource(new JS(@"component.getDataSource()"))
        .Columns(columns => {
            columns.Add().DataField("Id");
            columns.Add().DataField("TenNV");
        })
        .HoverStateEnabled(true)
        .Paging(p => p.PageSize(10))
        .FilterRow(f => f.Visible(true))
        .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
        .Height(345)
        .Selection(s => s.Mode(SelectionMode.Single))
        .SelectedRowKeys(new JS(@"component.option(""value"") ? [component.option(""value"")] : []"))
        .OnSelectionChanged(@<text>
            function(selectedItems) {
                var keys = selectedItems.selectedRowKeys;
                component.option("value", keys);
                component.close();
            }
        </text>)
    )
            }
        </div>
    </div>
</div>
<partial name="_ImportExcelModel" />