@{
    ViewData["Title"] = "Thông Tin Cấp Bậc";
    Layout = "~/Areas/Payroll/Views/Shared/_Layout.cshtml";
}

@section Scripts
    {
    <script src="~/js/exportFile_devextreme/polyfill.min.js"></script>
    <script src="~/js/exportFile_devextreme/exceljs.min.js"></script>
    <script src="~/js/exportFile_devextreme/FileSaver.min.js"></script>
    <script>

        var dataGrid, loadPanel, dataGridTmp;

        $(function () {
            let currentYear = new Date().getFullYear();
            LoadData(currentYear);
        });

        function LoadData(txtYear) {
            dataGrid = $("#gridContainer1").dxDataGrid("instance");
            loadPanel = $("#loadPanel").dxLoadPanel("instance");

            loadPanel.show();
            sendRequest('@Url.RouteUrl(new { area = "Payroll", controller = "CapBacNhanVien", action = "Get" })', "GET", { year: txtYear })
                .always(() => { loadPanel.hide(); })
                .done((data) => {
                    dataGrid.option("dataSource", data);
                });
        }

        function SaveLuong(e) {

            var change = e.changes[0];

            if (change) {
                e.cancel = true;
                loadPanel.show();
                e.promise = saveChange(change)
                    .always(() => { loadPanel.hide(); })
                    .done((data) => {
                        var datas = e.component.option("dataSource");

                        if (change.type === "insert") {
                            change.data = data;
                        }

                        datas = DevExpress.data.applyChanges(datas, [change], { keyExpr: "Id" });

                        e.component.option({
                            dataSource: datas,
                            editing: {
                                editRowKey: null,
                                changes: []
                            }
                        });

                        let currentYear = new Date().getFullYear();
                        LoadData(currentYear);
                    });
            }
        };

        function saveChange(change) {
            console.log('saveChange');
            console.log(change);
            switch (change.type) {
                case "insert":
                    change.data.Id = 0;
                    return sendRequest('@Url.RouteUrl(new { area = "Payroll", controller = "CapBacNhanVien", action = "PostCB" })', "POST", { values: JSON.stringify(change.data) });
                case "update":
                    return sendRequest('@Url.RouteUrl(new { area = "Payroll", controller = "CapBacNhanVien", action = "PutCB" })', "PUT", { key: change.key, values: JSON.stringify(change.data) });
                case "remove":
                    return sendRequest('@Url.RouteUrl(new { area = "Payroll", controller = "CapBacNhanVien", action = "DeleteCB" })', "DELETE", { key: change.key });
            }
        };

        function sendRequest(url, method, data) {
            var d = $.Deferred();

            method = method || "GET";

            $.ajax(url, {
                method: method,
                data: data,
                cache: false,
                xhrFields: { withCredentials: true }
            }).done(function (result) {
                d.resolve(method === "GET" ? result.data : result);
            }).fail(function (xhr) {
                d.reject(xhr.responseJSON ? xhr.responseJSON.Message : xhr.statusText);
            });

            return d.promise();
        };

        // Xuất excel luong
        function exporting(e) {
            var workbook = new ExcelJS.Workbook();
            var worksheet = workbook.addWorksheet('CapBacNhanVien');

            DevExpress.excelExporter.exportDataGrid({
                component: e.component,
                worksheet: worksheet,
                autoFilterEnabled: true
            }).then(function () {
                workbook.xlsx.writeBuffer().then(function (buffer) {
                    saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'CapBacNhanVien.xlsx');
                });
            });
            e.cancel = true;
        }

        /* Import, export, insert,update,delete danh sách nhân viên khám sk */
        function ImportExcel() {
            $("#fileInputExcel").val(null);
            $('#import_File').modal('show');
        }

        $('#btnCloseImportExcel').on('click', function () {
            var fileUpload = $("#fileInputExcel").get(0);
            var files = fileUpload.files;
            if (files.length > 0) {
                $("#fileInputExcel").val(null);
                $('#hd-ImportData').val('');
                $('#import_File').modal('hide');
                location.reload();
            }
        });

        $('#btnCloseImport').on('click', function () {
            var fileUpload = $("#fileInputExcel").get(0);
            var files = fileUpload.files;
            if (files.length > 0) {
                $("#fileInputExcel").val(null);
                $('#hd-ImportData').val('');
                $('#import_File').modal('hide');
                location.reload();
            }
        });

        $('#btnImportExcel').on('click', function () {
            var fileUpload = $("#fileInputExcel").get(0);
            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
                fileData.append("files", files[i]);
            }

            $.ajax({
                url: '/Payroll/CapBacNhanVien/ImportExcel',
                type: 'POST',
                data: fileData,
                processData: false,  // tell jQuery not to process the data
                contentType: false,  // tell jQuery not to set contentType
                success: function (data) {
                    $('#import_File').modal('hide');
                    hrms.notify("Import success!", 'Success', 'alert', function () {
                        location.reload();
                    });
                },
                error: function (status) {
                    hrms.notify('error: Import error!', 'error', 'alert', function () { });
                }
            });
            return false;
        });

        // chon nam
        function selectedDate_changed(data) {

            let sDate = data.value;
            if (sDate == '') {
                var date = new Date();
            }
            else {
                var date = new Date(sDate);
            }

            // Get year, month, and day part from the date
            var year = date.toLocaleString("default", { year: "numeric" });
            LoadData(year);
        };

        function calculateFilterExpression(filterValue, selectedFilterOperation, target) {
            if (target === "search" && typeof (filterValue) === "string") {
                return [this.dataField, "contains", filterValue]
            }

            return function (data) {
                return (data.AssignedEmployee || []).indexOf(filterValue) !== -1
            }
        }
    </script>
}


<div class="content container-fluid">
    <div class="page-header" style="margin-bottom:-1rem">
        <div class="row">
            <div class="col-sm-12">
                <h3 class="page-title">Thông Tin Cấp Bậc Nhân Viên</h3>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Payroll/Home/Index">Home</a></li>
                    <li class="breadcrumb-item active">Thông Tin Cấp Bậc Nhân Viên</li>
                </ul>
            </div>
        </div>
    </div>


    <div class="row align-items-center">
        <div class="col">
            <div class="form">
                <div class="dx-fieldset">
                    <div class="dx-field">
                        <div>
                            @(Html.DevExtreme().DateBox()
                                .ID("txt_year")
                                .Value(DateTime.Now.Year.ToString())
                                .CalendarOptions(x => x.MaxZoomLevel(CalendarZoomLevel.Decade))
                                .DisplayFormat("yyyy")
                                .Width(200)
                                .Placeholder("Select...")
                                .Label("Year")
                                .OnValueChanged("selectedDate_changed")
                                )

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-auto float-right ml-auto" style="margin-right:100px;">
            <div class="btn-group">
                <button type="button" class="btn btn-info dropdown-toggle" id="btnImport" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Excel</button>
                <div class="dropdown-menu" style="">
                    <a class="dropdown-item" href="~/templates/CapBacNhanVienInformation.xlsx">File mẫu import cấp bậc nhân viên</a>
                    <a class="dropdown-item" id="btnImport" onclick="ImportExcel()">Import Cấp Bậc NV</a>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @(Html.DevExtreme().LoadPanel()
                .ID("loadPanel")
                .Position(p => p.Of("#gridContainer1"))
                .Visible(false)
                )
            @(Html.DevExtreme().DataGrid<NHANVIEN_INFOR_EX>
                ()
                .ID("gridContainer1")
                .KeyExpr("Id")
                .Height(700)
                .ShowBorders(true)
                .ColumnAutoWidth(true)
                .RepaintChangesOnly(true)
                .LoadPanel(loadPanel => loadPanel.Enabled(false))
                .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Virtual))
                .Paging(paging => paging.Enabled(true))
                .ShowColumnLines(true)
                .ShowRowLines(true)
                .RowAlternationEnabled(true)
                .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto)
                )
                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                .SearchPanel(searchPanel => searchPanel
                .Visible(true)
                .Width(240)
                .Placeholder("Search...")
                )
                .Selection(s => s.Mode(SelectionMode.Single))
                .HoverStateEnabled(true)
                .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                .OnExporting("exporting")
                .Editing(editing =>
                {
                    editing.Mode(GridEditMode.Form);
                    editing.AllowUpdating(true);
                    editing.AllowDeleting(true);
                    editing.AllowAdding(true);
                })
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Id).Visible(false).AllowEditing(false);
                    columns.AddFor(m => m.MaNV).Caption("Mã NV").AllowEditing(true)
                    .Lookup(lookup => lookup
                    .DataSource(d => d.Mvc().Controller("DCChamCong").LoadAction("Employees").Key("Id"))
                    .ValueExpr("Id")
                    .DisplayExpr("Id")
                    )
                    .CalculateFilterExpression("calculateFilterExpression");

                    columns.AddFor(m => m.HR_NHANVIEN.TenNV).Caption("Tên Nhân Viên").AllowEditing(false);
                    columns.AddFor(m => m.HR_NHANVIEN.HR_BO_PHAN_DETAIL.MaBoPhan_TOP2).Caption("Bộ Phận").AllowEditing(false);
                    columns.AddFor(m => m.MaBoPhanEx).Caption("Mã Bộ phận").AllowEditing(true);
                    columns.AddFor(m => m.Grade).Caption("Grade").AllowEditing(true);
                    columns.AddFor(m => m.Year).Caption("Year").AllowEditing(true);
                }).SearchPanel(searchPanel => searchPanel.Visible(true)).WordWrapEnabled(true).OnSaved("SaveLuong")
                .Summary(s => s.TotalItems(items =>
                {
                    items.AddFor(m => m.MaNV)
                    .SummaryType(SummaryType.Count);
                })
                )
                )
        </div>
    </div>
</div>
<partial name="_ImportExcelModel" />


